#!/usr/bin/env python2
# Copyright (c) 2017 Ivan J. <parazyd@dyne.org>

import json
import sys
from flask import Flask, render_template, request, json
from twitter import *

import factolib


global tweetsFile
global taggedFile

taggedFile = "tagged.txt"

try:
    with open('credentials') as fd:
        exec(fd.read())
except:
    print("no credentials file found. please create it")
    sys.exit(1)

app = Flask(__name__)

def writetweets(tweets, twfile):
    twfile = open(twfile, "w")
    for s in tweets:
        sintweet = s["text"]
        sintweet = sintweet.replace("\n", " ")
        sintweet = sintweet.encode("ascii", "ignore")
        twfile.write(sintweet + "\n")
    twfile.close()

@app.route("/")
def main():
    return render_template('index.html')

@app.route("/search", methods=['POST'])
def search():
    _name = request.form['inputName']
    _method = request.form['searchMethod']

    if not _name or not _method:
        return "Wrong data. Please try again."

    api = Twitter(auth=OAuth(oatoken,oasecret,conskey,conssecret))

    if _method == "account":
        statuses = api.statuses.user_timeline(screen_name=_name, count=100)
        tweetsFile = "fetchedtweets-" + _name + ".txt"
        writetweets(statuses, tweetsFile)
        factolib.classify(tweetsFile, taggedFile)

    elif _method == "searchterm":
        statuses = api.search.tweets(q=_name, count=1)
        tweetsFile = "fetchedsearch.txt"
        writetweets(statuses, tweetsFile)
        factolib.classify(tweetsFile, taggedFile)

    cfs = "counterfactuals.txt"
    with open(cfs) as f:
        return f.read()

if __name__ == "__main__":
    try:
        if sys.argv[1] == '-p':
            _port = sys.argv2
    except:
        _port = 5000

    app.run(host="127.0.0.1", port=int(_port))
    #subprocess.call(["xdg-open", "http://127.0.0.1:" + _port])
